server:
  port: 8083

spring:
  application:
    name: auth-service

  datasource:
    url: jdbc:h2:mem:authdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ""

  # JPA/Hibernate
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: false

jwt:
  secret: "myVerySecretKey123456789012345678901234567890"
  expiration: 86400000 # 24 horas en milisegundos

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}

management:
  endpoints:
    web:
      exposure:
        include: health,info,env,metrics
  endpoint:
    health:
      show-details: when_authorized

# Logging Configuration
logging:
  level:
    com.ecommerce.authservice: DEBUG
    com.ecommerce.sharedlib: DEBUG
    org.springframework.security: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

app:
  data:
    init:
      enabled: true
  admin:
    email: admin@ecommerce.com
    password: Admin123!
    firstName: Super
    lastName: Admin
  jwt:
    secret: mySecretKey
    expiration: 86400000